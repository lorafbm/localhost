<?php
error_reporting(E_ALL);
header('Content-Type: text/html; charset=utf-8');
/**
 *    Задачник. После каждого $array мы ОБЯЗАНЫ написать прям тут нужный нам код. Прогнать массив $array через foreach и обработать по заданию из $q.
 *    $q - массивы, то есть могут содержать несколько заданий, каждый из которых будет работать с имеющимся массивом
 *    Если у нас в задаче замена, но мы производим замену и выводим: $text = preg_replace('что','на что',$text),
 *    Если у нас в задаче поиск, то производим проверку через if-else и выводим: строку
 *    echo 'В такой-то строке: '.htmlspecialchars($array[$k]).' регулярка прошла УСПЕШНО или НЕ УСПЕШНО (подставить в if-else)';
 *    и если у нас поиск, то дополнительно вывести весь массив $matches, И нужную найденную строку, если нам надо её получить echo $matches[0][1] <- пример
 *  Задачки подготовил Inpost специально для курсов. Дата: 5 января 2012 года
 *    skype: imbalance_hero , пишите :)
 */

/**
 *    Подсказки:
 *    ^ - начало строки, если указали, то проверка идёт от начала!
 *    $ - конец строки
 *    \s - пробел
 *    \t - табуляция
 *    * - {0,}
 *    + - {1,}
 *    . - любой символ!
 *    Модификаторы:
 *    u - работаем в кодировке UTF-8
 *    i - регистронезависимый текст
 *    U - отмена жадного поиска
 *    Общие данные:
 *    [] - область допустимых символов в КОНКРЕТНОМ символе. [a-z]{3} <- 3 символа любых из a-z, вплоть даже до 3-х повторяющихся
 *    {} - количество символов, если не стоит, значит 1 символ! Если записано одно число, то РОВНОЕ значение, если 2, то min,max
 *    () - логические скобки И/ИЛИ карман, куда попадают данные
 *
 * /


$array = array(
    'Ваш логин: Inpost. Добро пожаловать',
    'Ваш логин: Николай. Добро пожаловать',
    'Ваш логин: Анна Семинович. Добро пожаловать',
    'Ваш логин: Борис_Бурда-2. Добро пожаловать',
);
$q = 'Поиском достать логин.
      Особенности: логин стоит после двухиточия, может представлять из себя рус и англ символы, пробелы, тире и подчеркивание. 
	  Для для того, чтобы достать чистый логин, воспользуемся карманом (скобками)';


foreach ($array as $k => $v) {

    if (preg_match('#^-?\s?([\w-\d\s]+)#ui', $array[$k], $matches)) {
        echo 'В  строке: ' . htmlspecialchars($array[$k]) . ' регулярка прошла УСПЕШНО ';
        echo '<pre>' . print_r($matches[1], 1) . '</pre>';
    } else {
        echo ' В строке' . htmlspecialchars($array[$k]) . ' регулярка прошла НЕ УСПЕШНО ';
    }
}
echo '<hr>';
echo '<hr>';

$array = array(
    'main',
    'READ',
    'news"&\\/files',
    '../../index',
    'news',
    'kill_crash-and-destroy',
    'loveYou',
);

$q = 'Проверить допустимые имена файлов
      Важно заметить, что мы в юникс-системе будем использовать как большие, так и маленькие символы.
	  Необходимо недопустить попадания ТОЛЬКО запрещенных файловой системой имён, а так же попытки перейти между каталогами';


echo '<pre>' . print_r($array, 1) . '</pre>';
echo 'Проверить допустимые имена файлов<br>';

foreach ($array as $k => $v) {

    if (preg_match('#([\\\/:\*"\<\>\|\+\?])|(/|\.{1,2}/)#ui', $array[$k], $matches)) {
        echo 'В  строке:' . htmlspecialchars($array[$k]) . ' имя недопустимое  <br> ';
        echo '<pre>недопустимые символы: ' . print_r($matches[0], 1) . '</pre>';
    } else {
        echo ' В строке: ' . htmlspecialchars($array[$k]) . ' все OK  <br>' ;
    }
}
echo '<hr>';
echo '<hr>';

$array = array(
    'file.jpg',
    'zzz.png',
    'afafaf.php',
    'quad.jpg.',
    'quad2.JPG',
    'quad3.jpg.vir',
    'gif.doc',
    'file.virus',
);

$q = 'Загрузка фотографий. Необходимо допустить ТОЛЬКО: jpg,png,gif расширения
	  Важной особенностью будет то, что поиск лучше осуществлять с конца строки $ .
	  Интересный момент, что можно попасться на ошибку Попова :)';

echo '<pre>' . print_r($array, 1) . '</pre>';
echo ' Необходимо допустить ТОЛЬКО: jpg,png,gif расширения<br>';
foreach ($array as $k => $v) {

    if (preg_match('#\.(jpe?g|gif|png)$#ui', $array[$k], $matches)) {
        echo 'В  строке:' . htmlspecialchars($array[$k]) . '  все ОК<br> ';
    } else {
        echo ' В строке ' . htmlspecialchars($array[$k]) . '  недопустимое  расширение файла<br> ';
    }
}
echo '<hr>';
echo '<hr>';

$array = array(
    'Длинная строка. Главное, что мы научимся с ней идеально работать.  HOW do you do? Вот так и живём.Классно!',
);

$q = array(
    'Одна строка, заданий много:',
    'Получить все слова. Самая простая регулярка, поиск по всей строке, указать надо лишь допустимые символы и количество',
    'Получить все английские слова.',
    'Получить слова, которые стоят после точки. Обращаю внимание, что пробел после точки может БЫТЬ и даже не один, а может и не быть, символ пробела: \s',
    'Необходимо получить 5 символ от начала строки. Начало строки: ^ , и не забудем использовать кармашек, чтобы туда ушел нужный нам символ',
    'Получить все слова, в которых первым символ будет начинаться с большой буквы. Подсказка, необходимо использовать 2 квадратных скобки!',
);


echo '<pre>' . print_r($array, 1) . '</pre>';

foreach ($array as $k => $v) {

    preg_match_all('#([a-zа-яё]+)#ui', $array[$k], $matches);

    echo '<pre>Получить все слова.<br>' . print_r($matches[0], 1) . '</pre>';

}
echo '<hr>';


foreach ($array as $k => $v) {

    preg_match_all('#([a-z]+)#ui', $array[$k], $matches);

    echo '<pre>Получить все английские слова.<br>' . print_r($matches[0], 1) . '</pre>';

}
echo '<hr>';


foreach ($array as $k => $v) {

    preg_match_all('#\.\s*([a-zа-я]+)#ui', $array[$k], $matches);

    echo '<pre>Получить слова, которые стоят после точки.<br>' . print_r($matches[1], 1) . '</pre>';

}
echo '<hr>';


foreach ($array as $k => $v) {

    preg_match('#^.{4}(.)#ui', $array[$k], $matches);

    echo '<pre>Необходимо получить 5 символ от начала строки.<br>' . print_r($matches[1], 1) . '</pre>';

}
echo '<hr>';


foreach ($array as $k => $v) {

    preg_match_all('#[A-ZА-ЯЁ][A-ZА-ЯЁa-zа-яё]+#u', $array[$k], $matches);

    echo '<pre>Получить все слова, в которых первым символ будет начинаться с большой буквы.<br>' . print_r($matches[0], 1) . '</pre>';

}
echo '<hr>';
echo '<hr>';

$array = array(
    '10 , 22, 2.1, 2.5, 10.10, 500.1, 77, 10.11.12.13, 2.5'
);

$q = array(
    'Достать ВСЕ дробные числа. Дробные - это числа, разделенные точкой',
);

echo '<pre>' . print_r($array, 1) . '</pre>';
foreach ($array as $k => $v) {


    preg_match_all('#(\s|^)(\d+\.\d{1,2})(,|$)#u', $array[$k], $matches);

    echo '<pre>Достать ВСЕ дробные числа. Дробные - это числа, разделенные точкой<br>' . print_r($matches[2], 1) . '</pre>';

}
echo '<hr>';
echo '<hr>';

$array = array(
    'site.ru',
    'barakuda',
    'zimbabwe_ru',
    'zimbabwe',
    'zzz-zimbabwe',
    'http://site.ru',
    'www.site.com',
    'www.zimbabwe.com',
    'zimbabwe.com.ua',
    'http://zimbabwe.ru',
);

$q = array(
    'Получить ссылки на реальные сайты (обязательно доменное имя), где имя сайта zimbabwe',
    'Немного сложная работа со строкой. Осуществить проверку каждого слова на присутствие в начале http://, и там, где его нет - дописать.
	 Для этих целей используем обход цикла foreach, и проверку preg_match. Не забываем про экранизацию при помощи preg_quote',
    'Похожее задание, но для сайтов, где не указано доменное имя - дописать .ru, это продолжение предыдущего задания, делается так же само, в одном цикле, просто 2 отдельных условия!',
);

echo '<pre>' . print_r($array, 1) . '</pre>';
echo ' Получить ссылки на реальные сайты:<br>';
foreach ($array as $k => $v) {

    if (preg_match('#^http://zimbabwe.*#ui', $array[$k], $matches)) {
        echo 'В  строке:' . htmlspecialchars($array[$k]) . '  все ОК<br> ';
    }
}
echo '<hr>';

echo '<pre>' . print_r($array, 1) . '</pre>';
echo ' Осуществить проверку каждого слова на присутствие в начале http://, и там, где его нет - дописать:<br>';


foreach ($array as $k => $v) {

    if (!preg_match('#^http#ui', $array[$k], $matches)) {
        echo ' В строке ' . htmlspecialchars($array[$k]) . '  нет http-дописываем:<br> ';
        $array[$k] = 'http://'.$array[$k];
        echo $array[$k] . '<br>';
    }

}

echo '<hr>';

echo '<pre>' . print_r($array, 1) . '</pre>';

echo ' где не указано доменное имя - дописать .ru:<br>';

foreach ($array as $k => $v) {

    if (!preg_match('#\w+(\..+)$#ui', $array[$k], $matches)) {
        echo ' В строке ' . htmlspecialchars($array[$k]) . '  нет доменного имени - дописываем .ru <br> ';
        $array[$k] = $array[$k].'.ru';
        echo $array[$k] . '<br>';
    }

}

echo '<hr>';
echo '<hr>';

$array = array(
    'inpost',
    'Barabulka_ru',
    'Zimbabwe.ru',
    'Max',
    'Yojik',
    'Иван Тарасов',
    'Ёжик',
    'Борис Николаевич Кощуновский',
    'Ооооооооооооооооооооочень длинное имя',
    'Я',
    'go->drink->die',
    'Don`t sleep',
    '<Пивасик',
    '1',
    '123456789',
    '77777',
    '7ф777я7',
    '7ф',
    '7я'
);

$q = array(
    'Теперь идут операции по работе с логинами и паролями. Очень важно именно при РЕГИСТРАЦИИ:',
    'Проверка на preg_match, разрешить только числам. Подсказка: числа точно так же как и буквы, а именно 0-9 (а-я)',
    'Пропустить только строки, состоящие из цифр 7 и символов ф,я',
    'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов',
    'Выбрать логин, который начинается на M и заканчивается на x , я говорю про Max',
);


echo '<pre>' . print_r($array, 1) . '</pre>';
echo 'разрешить только числам<br>';

foreach ($array as $k => $v) {

    if (preg_match('#^\d*$#ui', $array[$k], $matches)) {
        echo '<pre>'. print_r($matches[0], 1). '</pre>';
    }

}
echo '<hr>';

echo '<pre>' . print_r($array, 1) . '</pre>';
echo 'Пропустить только строки, состоящие из цифр 7 и символов ф,я<br>';

foreach ($array as $k => $v) {

    if (preg_match('#[7фя]*#ui', $array[$k], $matches)) {

        echo '<pre>' . print_r($matches[0], 1) . '</pre>';

    }

}
echo '<hr>';

echo '<pre>' . print_r($array, 1) . '</pre>';
echo 'Пропустить только рус и англ символы, подчеркивание и тире, пробел(!) длиной от 4 до 15 символов<br>';

foreach ($array as $k => $v) {

   if (preg_match('#^[a-zа-я*_*-*\s*]{4,15}#ui', $array[$k], $matches)) {

        echo '<pre>'.print_r($matches[0],1) . '</pre><br>';
    }

}
echo '<hr>';

foreach ($array as $k => $v) {

    if (preg_match('#^M[a-zа-я]x#u', $array[$k], $matches)) {
        echo '<pre>Выбрать логин, который начинается на M и заканчивается на x , я говорю про Max maX<br>' . print_r($matches, 1) . '</pre>';
    }
}

echo '<hr>';
echo '<hr>';

$array = array(
    'Я тебя ооооочеень            СИЛЬНО            ЛЮБЛЮ          МОЙ                    ДругБорис! Цёми-Цёми,    Пративный!',
);

$q = array(
    'Вчера писал для себя. Заменить подряд идущие пробелы на один. Чтобы не было их так много. preg_replace',
);

echo '<pre>' . print_r($array, 1) . '</pre>';
foreach ($array as $k => $v) {
    echo 'много пробелов-убираем:<br> ';
    $count = preg_replace('#\s+#ui', ' ', $array[$k]);
    echo $count . '<br>';

}

echo '<hr>';
echo '<hr>';

$array = array(
    'Дата публикации:27 августа 08:43. Был отличный год!',
);

$q = array(
    'Строку мы знаем, меняется лишь день,месяц,время. Необходимо достать:',
    'Время, когда опубликовали',
    'Полностью дату, а именно (27 августа 08:43), она может меняться!',
);
echo '<pre>' . print_r($array, 1) . '</pre>';
foreach ($array as $k => $v) {

    if ( preg_match('#\d[0-9]:\d[0-9]#u', $array[$k], $matches)) {

        echo '<pre>Необходимо достать: Время, когда опубликовали:<br>' . print_r($matches, 1) . '</pre>';

    }

}
echo '<hr>';
foreach ($array as $k => $v) {

    if (preg_match('#:(\d[0-9]+\s\w+\s\d[0-9]:\d[0-9])#u', $array[$k], $matches)) {

        echo '<pre>Необходимо достать:Полностью дату, а именно (27 августа 08:43), она может меняться!<br>' . print_r($matches[1], 1) . '</pre>';

    }

}
echo '<hr>';
echo '<hr>';

$array = array(
    '<a href="file.php">Это ссылка, и тут было классно</a>',
    '<a    href     =       "file.php"     >Это ссылка, и тут было классно</a>',
    '<a    href=file.php >Это ссылка, и тут было классно</a>',
    "<a    href='file.php' >Это ссылка, и тут было классно</a>",
);

$q = array(
    'Используем карманы, необходимо получить путь, куда ссылается и текст внутри тега!
	 Стоит обратить внимание на момент, где символ МОЖЕТ БЫТЬ, а может и не БЫТЬ',
);

echo '<pre>' . print_r($array, 1) . '</pre>';
foreach ($array as $k => $v) {

    preg_match('#^\<a\s*href\s*=\s*(.+)\s*>(.+)\</a\>#uiU', $array[$k], $matches);

    echo '<pre>необходимо получить  текст внутри тега! ' . print_r($matches[0], 1) . '</pre>';
    echo '<pre>необходимо получить   путь, куда ссылается! ' . print_r($matches[1], 1) . '</pre>';

}
echo '<hr>';
echo '<hr>';

$array = array(
    'text@',
    'yandex@@mega.com',
    'beer@mail.com',
    "inpost.dp.ua",
    "inpostdpua@gmail.com",
    "lorik_fbm@mail.ru",
    "lora@gospodar.com.ua"
);

$q = array(
    'Проверить на валидность е-мейла. Краткая информация (ВАЖНАЯ!), емеил состоит из набора символов маленьких. 
	 Присутствует в центре собака, слева имя ящика, которое может состоять из обычных символов англ И подчеркивания И тире.
	 Справа находятся домены, отделенные точками.',
);


echo '<pre>' . print_r($array, 1) . '</pre>';
foreach ($array as $k => $v) {
    
    if (preg_match('#[a-z_-]+@[a-z]+\.[a-z]{2,3}#ui', $array[$k], $matches)) {
        echo 'В  строке:' . htmlspecialchars($array[$k]) . '  все ОК<br> ';

    } else {
        echo ' В строке ' . htmlspecialchars($array[$k]) . '  недопустимый e-mail<br> ';
    }


}
echo '<hr>';
echo '<hr>';